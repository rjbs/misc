#!/usr/bin/perl
use strict;
use warnings;

use File::HomeDir;
use File::Spec;
use Parse::CPAN::Packages;
use WWW::Mechanize;

my $HOME_DIR  = File::HomeDir->my_home;
my $SEEN_FILE = File::Spec->catfile($HOME_DIR, 'tmp', 'pep-mech-seen.txt');
my $PKGS_FILE = File::Spec->catfile($HOME_DIR, 'mirrors/minicpan/modules/02packages.details.txt.gz');

my %seen_pkg;

my @dist_names = @ARGV;

my $p = Parse::CPAN::Packages->new($PKGS_FILE);

my @packages;

if (@dist_names) {
  @packages = map { @{ $p->latest_distribution($_)->packages } } @dist_names;
} else {
  %seen_pkg = do {
    open my $seen_fh, "<", $SEEN_FILE or die "couldn't open seen file <: $!";
    map { chomp; $_ => 1 } <$seen_fh>;
  };

  @packages = grep {
    not(exists $seen_pkg{ $_->package })
    and
    $_->package =~ /^(?:Email|Mail|MIME|Net::(?:SMTP|POP|IMAP|QMTP|LMTP))/
  } $p->packages;
}

my $agent = WWW::Mechanize->new;

$agent->get('http://emailproject.perl.org/wiki/');

$agent->follow_link(text_regex => qr/Log in/);

$agent->submit_form(
  form_name => 'userlogin',
  fields => {
    wpName      => "MechaRJBS",
    wpPassword  => 'cherrycokezero',
  }
);

die "login failed" . "\n" . $agent->content
  unless $agent->content =~ /Login successful/;

open my $seen_fh, '>>', $SEEN_FILE or die "couldn't open seen file >>: $!";

for my $pkg (@packages) {
  my $pkg_name = $pkg->package;
  my $dist = $pkg->distribution->dist;

  $agent->get("http://emailproject.perl.org/wiki/$pkg_name");

  if ($agent->content !~ /currently no text in this page/) {
    print "$pkg_name page exists already\n";
  } else {
    $agent->follow_link(text => 'Edit');

    $agent->submit_form(
      form_name => 'editform',
      fields => {
        wpTextbox1 => "{{module|module=$pkg_name|dist=$dist}}",
        wpSummary  => 'added stub',
      }
    );
    print "$pkg_name page created\n";
  }
  print {$seen_fh} "$pkg_name\n" or warn "couldn't append to seen file: $!";
}
