package CPAN::Mini::Archive;
use Carp;

use Parse::CPAN::Authors;
use Parse::CPAN::Packages;

use Compress::Zlib;
use LWP::Simple qw(get);
use URI;

use warnings;
use strict;

=head1 NAME

CPAN::Mini::Archive - an archive of perl distributions

=head1 VERSION

version 0.01

 $Id$

=cut

our $VERSION = '0.01';

=head1 SYNOPSIS

  use CPAN::Mini::Archive;

=head1 DESCRIPTION

Quick summary of what the module does.

=head1 METHODS

=head2 new

=cut

sub new {
	my ($class, %arg) = @_;
	croak "no archive root given" unless $arg{root};
	my $self = bless { root => $arg{root} } => $class;

	$self->__indices;

	return $self;
}

sub __get_index {
	my ($self, $filename) = @_;
	my $uri  = URI->new_abs($filename, $self->{root});
	my $file = get($uri) or die "couldn't fetch $filename";
	Compress::Zlib::memGunzip(\$file);
}

sub __indices {
	my ($self) = @_;

	# 01mailrc
	my $mailrc = $self->__get_index("authors/01mailrc.txt.gz");
	$self->{_pc_authors} = Parse::CPAN::Authors->new($mailrc)
		or die "couldn't parse 01mailrc.txt.gz";

	# 02packages
	my $packages = $self->__get_index("modules/02packages.details.txt.gz");
	$self->{_pc_packages} = Parse::CPAN::Packages->new($packages)
		or die "couldn't parse 02packages.details.txt.gz";
}

sub authors { (shift)->{_pc_authors}->authors; }

sub packages { (shift)->{_pc_packages}->packages; }

sub distributions { (shift)->{_pc_packages}->distributions; }

sub latest_distributions { (shift)->{_pc_packages}->latest_distributions; }

package CPAN::Mini::Archive::Dist;

sub new { }

=head1 AUTHOR

Ricardo Signes, C<< <rjbs@cpan.org> >>

=head1 BUGS

Please report any bugs or feature requests to
C<bug-cpan-mini-archive@rt.cpan.org>, or through the web interface at
L<http://rt.cpan.org>.  I will be notified, and then you'll automatically be
notified of progress on your bug as I make changes.

=head1 COPYRIGHT

Copyright 2005 Ricardo Signes, All Rights Reserved.

This program is free software; you can redistribute it and/or modify it
under the same terms as Perl itself.

=cut

1;
