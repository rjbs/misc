#!/usr/bin/perl

# $Id: mfn,v 10.3 2003/07/23 04:57:10 mdxi Exp $

# recursively seek and normalize files named by dipshits
BEGIN { unshift @INC, "/home/rjbs/code/perl/mfn"; }

use File::Find;
use Getopt::Long;
$Getopt::Long::ignorecase = 0;

use POSIX (strftime);

use File::MFN::Media;

#use strict;

$main::VERSION = "R10";
   $date = strftime "%Y%m%dT%H%M", localtime;

#------------------------------------------

&run_mfn;

sub run_mfn {
	my %opts = &handle_args;
	if ($opts{interactive}) { $opts{interactive} = \&interactive_change; }

	my $mfn = File::MFN::Media->new(%opts);

	finddepth($mfn->wanted(%opts), $tree);
	&report($mfn,%opts);
}

#------------------------------------------

sub report {
	my $mfn = shift;
	my %opts = @_;

    unless ($opts{nolog}) {
	if ($opts{keeplog}) { 
	    open(LOG,">> $opts{logfile}") or
		die "Can't open logfile $opts{logfile}\n";
	} else { 
	    open(LOG,"> $opts{logfile}") or
		die "Can't open logfile $opts{logfile}\n";
	}
	select LOG;
	print ">>>>>> ",$date,"=" x 70,"\n";
	if (@{$mfn->{noclobber}}) {
		foreach (@{$mfn->{noclobber}}) {
			print "NOCLOB:",$_,"\n";
		}
		print "-" x 70,"\n";
	}
	foreach (@{$mfn->{renamed}}) {
	    print "RENAME:",$_,"\n";
	}
	select STDOUT;
	close(LOG);
    }
    unless ($opts{silent}) {
	print "\nFile counts\n";
	print "-" x 20,"\n";
	print "Seen     : ",scalar @{$mfn->{seen}}
	   ,"\nRenamed  : ",scalar @{$mfn->{renamed}}
	   ,"\nNoclobber: ",scalar @{$mfn->{noclobber}}
	   ,"\n";
	print "-" x 20,"\n";
	print "See ",$opts{logfile}," for full details\n\n";
    }
}


sub handle_args {
    my @usermedia = ();

    my %opts = (
	     clobber     => 0,
	     debug       => 0,
	     dotfiles    => 0,
	     interactive => 0,
	     keeplog     => 0,
	     logfile     => $ENV{HOME}."/mfn.log",
	     nolog       => 0,
	     monly       => 0,
	     nodirs      => 0,
	     silent      => 0,
	     verbose     => 0,
	     );

    $rc = GetOptions( \%opts,
		      'clobber|c',
		      'debug|d',
		      'dotfiles|D',
		      'help|h',
		      'interactive|i',
		      'keeplog|keep-log|k',
		      'logfile|L',
		      'media|M=s' => \@usermedia,
		      'monly|media-only|m',
		      'nolog|no-log|l',
		      'nodirs|no-dirs|n',
		      'silent|s',
		      'verbose|v',
		      'version|V'
		      );

    die "E: Error in argument processing (see above for more info); bailing.\n"
	if (! $rc);

    if ($opts{help})     { &help; exit }
    if ($opts{version})  { print "This is mfn ",$VERSION,"\n"; exit }

    if (@usermedia) {
	@media = ();
	@media = split(/,/,join(',',@usermedia));
    }

    if (@ARGV) {
	$tree = shift @ARGV;
    } else {
	$tree = '.';
    }

	return %opts;
}



sub interactive_change {
    print "Okay [y/N/q]? ";
    $yn = <STDIN>; chomp $yn;
    if ($yn =~ /^y/i) { 
	print "Renamed ";
	rename($old, $_[0]) unless ($opts{debug});
    } elsif  ($yn =~ /^q/i) { 
	exit;
    } else {
	print "OK, not renamed.\n\n";
    }
}

sub help {
    print <<HELP;
Usage: mfn [options] [<tree>]
  Where <tree> is the directory to use as the top of the recursive
  search. If <tree> is not given, the current directory will be used.
Options:
  -c --clobber      Overwrite files with the same name as the mogrified name
  -d --debug        Do everything but rename files
  -D --dotfiles     Don't exclude dotfiles
  -i --interactive  Ask permission before renaming anything
  -k --keep-log     Append to logfile instead of overwriting
  -l --no-log       Don't write to logfile
  -L --logfile      Location of the logfile (~/mfn.log)
  -m --media-only   Only rename media files
  -M --media        Comma separated list of media extensions
                    (@media)
  -n --no-dirs      Don't rename directories
  -s --silent       Don't print anything to STDOUT
  -v --verbose      Print extra info to STDOUT
  -V --version      Show version
  -h --help         Show this help
HELP
}
